{
	// Controls 
	"AccountPicker": {
		"scope": "javascript,typescript",
		"prefix": "NP:accountpicker",
		"body": [
			"<AccountPicker",
			"\tvalue={${1:variable}}",
			"\tonChange={${2:function}}",
			"/>"
		],
	},
	"Button": {
		"prefix": "NP:Button",
		"body": [
			"<Button",
			"\tonClick={() => ${1:function}}",
			"\ttype={Button.TYPE.${2:PRIMARY}}",
			"\ticonType={Button.ICON_TYPE.${3:DOCUMENTS__DOCUMENTS__NOTES__A_ADD}}",
			"\tsizeType={Button.SIZE_TYPE.${4:LARGE}}",
			"\t${5:loading}",
			">",
			"\t${6:String}",
			"</Button>"
		],
		"description": "Buttons are used throughout the product to provide users a way to complete an action"
	},
	"Checkbox": {
		"prefix": "NP:Checkbox",
		"body": [
			"<Checkbox",
			"\tchecked={${1:state}}",
			"\tonChange={${2:function}}",
			"\tlabel=\"${3:String}\"",
			"\t${4:checked}",
			"\t${5:disabled}",
			"\t${6:indeterminate}",
			"/>"
		],
		"description": "Checkbox"
	},
	"Dropdown": {
		"prefix": "NP:Dropdown",
		"body": [
			"<Dropdown title=\"${1:title}\" label=\"${2:label}\" labelInline>${3}</Dropdown>;"
		],
		"description": "Toggleable overlays for displaying a list of options"
	},
	"DropdownSection": {
		"prefix": "NP:DropdownSection",
		"body": [
			"<DropdownSection title=\"${1:title}\">${2}</DropdownSection>"
		],
		"description": "DropdownSection"
	},
	"DropdownItem": {
		"prefix": "NP:DropdownItem",
		"body": [
			"<DropdownItem>${1:ItemName}</DropdownItem>"
		],
		"description": "DropdownItem"
	},
	"MultilineTextField": {
		"prefix": "NP:MultilineTextField",
		"body": [
		"<MultilineTextField",
		"\tlabel=\"${1:label}\"",
		"\tplaceholder=\"${2:placeholder}\"",
		"/>;"
		],
		"description": "MultilineTextField"
	},
	"Radio": {
		"prefix": "NP:Radio",
		"body": [
		"<Radio ",
		"\tonChange={(event) => ${1:function}} ",
		"\tlabel=\"${2:label}\"",
		"\t${3:checked}",
		"\t${4:disabled}",
		"/>"
		],
		"description": "Radio"
	},
	"RadioGroup": {
		"prefix": "NP:RadioGroup",
		"body": [
		"<RadioGroup ",
		"\tdefaultValue=\"${1:1}\" ",
		"\tonChange={${2:function}}",
		"\tlabel=\"${3:label}\"",
		"\t${4:labelInline}",
		">",
		"</RadioGroup>"
		],
		"description": "RadioGroup"
	},
	"SegmentedControl": {
		"prefix": "NP:SegmentedControl",
		"body": [
		"<SegmentedControl ",
		"\tonChange={(evt, value) => ${1:function}(evt, value)}",
		"\tvalue={${2:value}}",
		"\ttype={SegmentedControl.TYPE.${3:ICONS_ONLY}}>",
		"</SegmentedControl>;"
		],
		"description": "SegmentedControl"
	},
	"SegmentedControlItem": {
		"prefix": "NP:SegmentedControlItem",
		"body": [
		"<SegmentedControlItem ",
		"\tvalue=\"${1:one}\" ",
		"\tlabel=\"${2:One}\"",
		"\thint=\"${3:The first item}\" ",
		"\ticonType={",
		"\t\tSegmentedControlItem.ICON_TYPE.${4:HARDWARE_AND_SOFTWARE__SOFTWARE__CODE}",
		"\t}",
		"\t${5:disabled}",
		"/>"
		],
		"description": "SegmentedControlItem"
	},
	"Select": {
		"prefix": "NP:Select",
		"body": [
		"<Select ",
		"\tlabel=\"${1:Items}\" ",
		"\t${2:labelInline} ",
		"\tonChange={(evt, value) => ${3:alert}(value)}>",
		"</Select>;"
		],
		"description": "Select"
	},
	"SelectItem": {
		"prefix": "NP:SelectItem",
		"body": [
		"<SelectItem value=\"${1:a}\">${2:Value is \"a\"}</SelectItem>"
		],
		"description": "SelectItem"
	},
	"Switch": {
		"prefix": "NP:Switch",
		"body": [
		"<Switch",
		"\tonChange={(e) => ${1:alert}(`Toggle to: ${e.target.checked}`)}",
		"\tlabel=\"${2:label}\"",
		"\t${3:defaultChecked}",
		"\t${4:disabled}",
		"/>"
		],
		"description": "Switch"
	},
	"TextField": {
		"prefix": "NP:TextField",
		"body": [
		"<TextField ",
		"\tlabel=\"${1:label}\" ",
		"\tplaceholder=\"${2:e.g. John Doe}\" ",
		"\ttype={TextField.TYPE.${3:SEARCH}}",
		"\t${4:labelInline}",
		"\t${5:disabled}",
		"\t${6:readOnly}",
		"/>;"
		],
		"description": "TextField"
	},

	// Tables
	"Table": {
		"prefix": "NP:Table",
		"body": [
		"<Table ",
		"\titems={${1:this._getItems()}}",
		"\trowCount={${2:data.count}} ",
		"\tonLoadMore={${3:fetchMore}}",
		"\tselectionType={Table.SELECTION_TYPE.${4:SINGLE}}",
		"\tselected={({ index }) => ${5:item.selected}}",
		"\tonSelect={(evt, { index }) => (${6:item.selected} = evt.target.checked)}",
		">",
        "\t$7",
		"</Table>"
		],
		"description": "Table"
	},
	"TableHeader": {
		"prefix": "NP:TableHeader",
		"body": [
		"<TableHeader actions={${1:this._getActions()}}>${2}</TableHeader>"
		],
		"description": "TableHeader"
	},
	"TableHeaderCell": {
		"prefix": "NP:TableHeaderCell",
		"body": [
		"<TableHeaderCell ",
		"\tvalue={${1:value}}",
		"\t${2:sortable}",
		"\tsortingType={${3:sortingType0}}",
		"\tsortingOrder={${4:0}}",
		"\tonClick={${5:this.onclick()}}",
		"\twidth=\"${6:100%}\"",
		">",
		"\t${7:header}",
		"</TableHeaderCell>"
		],
		"description": "TableHeaderCell"
	},
	"TableRow": {
		"prefix": "NP:TableRow",
		"body": [
		"<TableRow actions={${1:this._getActions()}}>${2}</TableRow>"
		],
		"description": "TableRow"
	},
	"TableRowCell": {
		"prefix": "NP:TableRowCell",
		"body": [
		"<TableRowCell>{${1:value}}</TableRowCell>"
		],
		"description": "TableRowCell"
	},
	"EntityTitleTableRowCell": {
		"prefix": "NP:EntityTitleTableRowCell",
		"body": [
		"<EntityTitleTableRowCell value={${1:item}} />"
		],
		"description": "EntityTitleTableRowCell"
	},
	"FavoriteTableRowCell": {
		"prefix": "NP:FavoriteTableRowCell",
		"body": [
		"<FavoriteTableRowCell checked={${1:item.favorite}} />"
		],
		"description": "FavoriteTableRowCell"
	},
	"MetricTableRowCell": {
		"prefix": "NP:MetricTableRowCell",
		"body": [
		"<MetricTableRowCell",
		"\ttype={MetricTableRowCell.TYPE.${1:BITS}}",
		"\tvalue={${2:value}}",
		"/>"
		],
		"description": "MetricTableRowCell"
	},
	"SparklineTableRowCell": {
		"prefix": "NP:SparklineTableRowCell",
		"body": [
		"<SparklineTableRowCell",
		"\taccountId={${1:id}}",
		"\tquery={${2:query}}",
		"/>"
		],
		"description": "SparklineTableRowCell"
	},
	"UserTableRowCell": {
		"prefix": "NP:UserTableRowCell",
		"body": [
		"<UserTableRowCell value={${1:item}} />"
		],
		"description": "UserTableRowCell"
	},

	// Feedback
	"Icon": {
		"prefix": "NP:Icon",
		"body": [
		"<Icon type={Icon.TYPE.${1:LOCATION__LOCATION__HOME}} />;"
		],
		"description": "Icon"
	},
	"Spinner": {
		"prefix": "NP:Spinner",
		"body": [
		"<Spinner type={Spinner.TYPE.${1:DOT}} ${2:inline} />;"
		],
		"description": "Spinner"
	},
	"Toast": {
		"prefix": "NP:Toast",
		"body": [
		"Toast.showToast({",
		"\ttitle: '${1:title}',",
		"\tdescription: '${2:description}',",
		"\tadditionalInfoLink: {",
		"\t\tlabel: '${3:label}',",
		"\t\tto: '${4:link}',",
		"\t},",
		"\ttype: Toast.TYPE.${5:CRITICAL},",
		"\tactions: [",
		"\t\t{",
		"\t\t\tlabel: '${6:label}',",
		"\t\t\tonClick: () => ${7:function},",
		"\t\t},",
		"\t],",
		"});"
		],
		"description": "Toast"
	},

	// Indicators
	"Badge": {
		"prefix": "NP:Badge",
		"body": [
		"<Badge type={Badge.TYPE.${1:INFO}}>${2:Badge}</Badge>"
		],
		"description": "Badge"
	},
	"Modal": {
		"prefix": "NP:Modal",
		"body": [
		"<Modal ",
		"\thidden={${1:this.state.hidden}} ",
		"\tonClose={${2:this._onClose}}",
		"\tonHideEnd={${3:this._onHideEnd}}",
		">",
		"\t${4}",
		"</Modal>"
		],
		"description": "Modal"
	},
	"Popover": {
		"prefix": "NP:Popover",
		"body": [
		"<Popover>",
		"\t<PopoverTrigger>${1:Trigger}</PopoverTrigger>",
		"\t<PopoverBody>${2}</PopoverBody>",
		"</Popover>;"
		],
		"description": "Popover"
	},
	"Tooltip": {
		"prefix": "NP:Tooltip",
		"body": [
		"<Tooltip",
		"\ttext=\"${1:text}\"",
		"\tplacementType={Tooltip.PLACEMENT_TYPE.${2:BOTTOM}}",
		"\tadditionalInfoLink={${3:additionalInfoLink}}",
		">",
		"\t${4}",
		"</Tooltip>"
		],
		"description": "Tooltip"
	},

	// Structure
	"AutoSizer": {
		"prefix": "NP:AutoSizer",
		"body": [
		"<AutoSizer>",
		"\t{({ width, height }) => (",
		"\t\t<div style={{ ...style, height, width }}>",
		"\t\t\twidth: {width}, height: {height}",
		"\t\t</div>",
		"\t)}",
		"</AutoSizer>"
		],
		"description": "AutoSizer"
	},
	"Card": {
		"prefix": "NP:Card",
		"body": [
		"<Card>",
		"\t<CardHeader title=\"${1:title}\" subtitle=\"${2:subtitle}\" />",
		"\t<CardBody>",
		"\t\t${3:body}",
		"\t</CardBody>",
		"</Card>;"
		],
		"description": "Card"
	},
	"Grid": {
		"prefix": "NP:Grid",
		"body": [
		"<Grid gapType={Grid.GAP_TYPE.${1:MEDIUM}}>${2}</Grid>"
		],
		"description": "Grid"
	},
	"GridItem": {
		"prefix": "NP:GridItem",
		"body": [
		"<GridItem ",
		"\tcolumnSpan={${1:1}}",
		"\t${2:collapseGapBefore}",
		"\t${3:collapseGapAfter}",
		">${4}</GridItem>"
		],
		"description": "GridItem"
	},
	"Layout": {
		"prefix": "NP:Layout",
		"body": [
		"<Layout ${1:preview} ${2:fullHeight}>${3}</Layout>;"
		],
		"description": "Layout"
	},
	"LayoutItem": {
		"prefix": "NP:LayoutItem",
		"body": [
		"<LayoutItem",
		"\ttype={LayoutItem.TYPE.${1:SPLIT_LEFT}}",
		"\tsizeType={LayoutItem.SIZE_TYPE.${2:SMALL}}",
		">",
		"\t${3}",
		"</LayoutItem>"
		],
		"description": "LayoutItem"
	},
	"LayoCollapsibleLayoutItemutItem": {
		"prefix": "NP:CollapsibleLayoutItem",
		"body": [
		"<CollapsibleLayoutItem",
		"\tcollapsed={this.state.${1:collapsedRight}}",
		"\ttriggerType={CollapsibleLayoutItem.TRIGGER_TYPE.${2:CUSTOM}}",
		"\ttype={LayoutItem.TYPE.${3:SPLIT_RIGHT}}",
		">",
		"\t${4}",
		"</CollapsibleLayoutItem>"
		],
		"description": "LayoCollapsibleLayoutItemutItem"
	},
	"List": {
		"prefix": "NP:List",
		"body": [
		"<List",
		"\titems={${1:items}}",
		"\trowCount={${2:remoteTotalNumberOfItems}}",
		"\trowHeight={${3:40}}",
		"\tonLoadMore={${4:loadMoreItems}}",
		">",
		"\t${5}",
		"</List>"
		],
		"description": "List"
	},
	"ListItem": {
		"prefix": "NP:ListItem",
		"body": [
		"<ListItem key={${1:key}}>${2:Item 1}</ListItem>"
		],
		"description": "ListItem"
	},
	"Spacing": {
		"prefix": "NP:Spacing",
		"body": [
		"<Spacing type={[Spacing.TYPE.${1:OMIT}, Spacing.TYPE.${2:LARGE}]}>${3}</Spacing>;"
		],
		"description": "Spacing"
	},
	"Stack": {
		"prefix": "NP:Stack",
		"body": [
		"<Stack ",
		"\tdirectionType={Stack.DIRECTION_TYPE.${1:HORIZONTAL}}",
		"\tgapType={Stack.GAP_TYPE.${2:SMALL}}",
		"\thorizontalType={Stack.HORIZONTAL_TYPE.${3:LEFT}}",
		"\tverticalType={Stack.VERTICAL_TYPE.${4:TOP}}",
		"\t${5:preview}",
		">",
		"\t${6}",
		"</Stack>"
		],
		"description": "Stack"
	},
	"StackItem": {
		"prefix": "NP:StackItem",
		"body": [
		"<StackItem>${1}</StackItem>"
		],
		"description": "StackItem"
	},
	"Tabs": {
		"prefix": "NP:Tabs",
		"body": [
		"<Tabs ",
		"\tdefaultValue=\"${1:tab-3}\" ",
		"\titems={${2:items}}",
		"\tonChange={${3:function}}",
		">",
		"\t${4}",
		"</Tabs>;"
		],
		"description": "Tabs"
	},
	"TabsItem": {
		"prefix": "NP:TabsItem",
		"body": [
		"<TabsItem value=\"${1:value}\" label=\"${2:label}\">",
		"\t${3:tab_name}",
		"</TabsItem>"
		],
		"description": "TabsItem"
	},
	"BlockText": {
		"prefix": "NP:BlockText",
		"body": [
		"<BlockText type={BlockText.TYPE.${1:PARAGRAPH}} tagType={BlockText.TYPE.${2:DIV}}>",
		"\t${3:text}",
		"</BlockText>;"
		],
		"description": "BlockText"
	},
	"HeadingText": {
		"prefix": "NP:HeadingText",
		"body": [
		"<HeadingText ",
		"\ttype={HeadingText.TYPE.${1:HEADING_1}}",
		"\ttagType={HeadingText.TAG_TYPE.${2:DIV}}",
		">",
		"\t${3:heading}",
		"</HeadingText>"
		],
		"description": "HeadingText"
	},
	"Link": {
		"prefix": "NP:Link",
		"body": [
		"<Link to=\"${1:href}\">${2:label}</Link>;"
		],
		"description": "Link"
	},

	// Charts
	"AreaChart": {
		"prefix": "NP:AreaChart",
		"body": [
		"<AreaChart",
		"\taccountId={${1:accountId}}",
		"\tquery=\"${2:NRQL}\"",
		"\t${3:fullWidth}",
		"\t${4:fullHeight}",
		"/>;"
		],
		"description": "AreaChart"
	},
	"BarChart": {
		"prefix": "NP:BarChart",
		"body": [
		"<BarChart",
		"\taccountId={${1:accountId}}",
		"\tquery=\"${2:NRQL}\"",
		"\t${3:fullWidth}",
		"\t${4:fullHeight}",
		"/>;"
		],
		"description": "BarChart"
	},
	"BillboardChart": {
		"prefix": "NP:BillboardChart",
		"body": [
		"<BillboardChart",
		"\taccountId={${1:accountId}}",
		"\tquery=\"${2:NRQL}\"",
		"\t${3:fullWidth}",
		"\t${4:fullHeight}",
		"/>;"
		],
		"description": "BillboardChart"
	},
	"ChartGroup": {
		"prefix": "NP:ChartGroup",
		"body": [
		"<ChartGroup>${1}</ChartGroup>"
		],
		"description": "ChartGroup"
	},
	"FunnelChart": {
		"prefix": "NP:FunnelChart",
		"body": [
		"<FunnelChart",
		"\taccountId={${1:accountId}}",
		"\tquery=\"${2:NRQL}\"",
		"\t${3:fullWidth}",
		"\t${4:fullHeight}",
		"/>;"
		],
		"description": "FunnelChart"
	},
	"HeatmapChart": {
		"prefix": "NP:HeatmapChart",
		"body": [
		"<HeatmapChart",
		"\taccountId={${1:accountId}}",
		"\tquery=\"${2:NRQL}\"",
		"\t${3:fullWidth}",
		"\t${4:fullHeight}",
		"/>;"
		],
		"description": "HeatmapChart"
	},
	"HistogramChart": {
		"prefix": "NP:HistogramChart",
		"body": [
		"<HistogramChart",
		"\taccountId={${1:accountId}}",
		"\tquery=\"${2:NRQL}\"",
		"\t${3:fullWidth}",
		"\t${4:fullHeight}",
		"/>;"
		],
		"description": "HistogramChart"
	},
	"JsonChart": {
		"prefix": "NP:JsonChart",
		"body": [
		"<JsonChart",
		"\taccountId={${1:accountId}}",
		"\tquery=\"${2:NRQL}\"",
		"\t${3:fullWidth}",
		"\t${4:fullHeight}",
		"/>;"
		],
		"description": "JsonChart"
	},
	"LineChart": {
		"prefix": "NP:LineChart",
		"body": [
		"<LineChart",
		"\taccountId={${1:accountId}}",
		"\tquery=\"${2:NRQL}\"",
		"\t${3:fullWidth}",
		"\t${4:fullHeight}",
		"/>;"
		],
		"description": "LineChart"
	},
	"PieChart": {
		"prefix": "NP:PieChart",
		"body": [
		"<PieChart",
		"\taccountId={${1:accountId}}",
		"\tquery=\"${2:NRQL}\"",
		"\t${3:fullWidth}",
		"\t${4:fullHeight}",
		"/>;"
		],
		"description": "PieChart"
	},
	"ScatterChart": {
		"prefix": "NP:ScatterChart",
		"body": [
		"<ScatterChart",
		"\taccountId={${1:accountId}}",
		"\tquery=\"${2:NRQL}\"",
		"\t${3:fullWidth}",
		"\t${4:fullHeight}",
		"/>;"
		],
		"description": "ScatterChart"
	},
	"SparklineChart": {
		"prefix": "NP:SparklineChart",
		"body": [
		"<SparklineChart",
		"\taccountId={${1:accountId}}",
		"\tquery=\"${2:NRQL}\"",
		"\t${3:fullWidth}",
		"\t${4:fullHeight}",
		"/>;"
		],
		"description": "SparklineChart"
	},
	"StackedBarChart": {
		"prefix": "NP:StackedBarChart",
		"body": [
		"<StackedBarChart",
		"\taccountId={${1:accountId}}",
		"\tquery=\"${2:NRQL}\"",
		"\t${3:fullWidth}",
		"\t${4:fullHeight}",
		"/>;"
		],
		"description": "StackedBarChart"
	},
	"TableChart": {
		"prefix": "NP:TableChart",
		"body": [
		"<TableChart",
		"\taccountId={${1:accountId}}",
		"\tquery=\"${2:NRQL}\"",
		"\t${3:fullWidth}",
		"\t${4:fullHeight}",
		"/>;"
		],
		"description": "TableChart"
	},

	// Query and Storage
	"AccountStorageMutationWrite": {
		"prefix": "NP:AccountStorageMutationWrite",
		"body": [
		"AccountStorageMutation.mutate({",
		"\taccountId: ${1:1},",
		"\tactionType: AccountStorageMutation.ACTION_TYPE.WRITE_DOCUMENT,",
		"\tcollection: '${2:myCollection}',",
		"\tdocumentId: '${3:myDocumentId}',",
		"\tdocument: {",
		"\t\t${4:key}: '${5:Value}',",
		"\t},",
		"});"
		],
		"description": "AccountStorageMutationWrite"
	},
	"AccountStorageMutationDelete": {
		"prefix": "NP:AccountStorageMutationAccountStorageMutationDelete",
		"body": [
		"AccountStorageMutation.mutate({",
		"\taccountId: ${1:1},",
		"\tactionType: AccountStorageMutation.ACTION_TYPE.DELETE_DOCUMENT,",
		"\tcollection: '${2:myCollection}',",
		"\tdocumentId: '${3:myDocumentId}',",
		"});"
		],
		"description": "AccountStorageMutationDelete"
	},
	"AccountStorageMutationDeleteCollection": {
		"prefix": "NP:AccountStorageMutationDeleteCollection",
		"body": [
		"AccountStorageMutation.mutate({",
		"\taccountId: ${1:1},",
		"\tactionType: AccountStorageMutation.ACTION_TYPE.DELETE_COLLECTION,",
		"\tcollection: '${2:myCollection}',",
		"});"
		],
		"description": "AccountStorageMutationDeleteCollection"
	},
	"AccountStorageQuery": {
		"prefix": "NP:AccountStorageQuery",
		"body": [
		"AccountStorageQuery.query({",
		"\taccountId: ${1:1},",
		"\tcollection: '${2:myCollection}',",
		"\tdocumentId: '${3:myDocumentId}',",
		"}).then(({ data }) => console.log(data));"
		],
		"description": "AccountStorageQuery"
	},
	"AccountsQuery": {
		"prefix": "NP:AccountsQuery",
		"body": [
		"AccountsQuery.query().then(({ data }) => console.log(data));"
		],
		"description": "AccountsQuery"
	},
	"EntitiesByDomainTypeQuery": {
		"prefix": "NP:EntitiesByDomainTypeQuery",
		"body": [
		"EntitiesByDomainTypeQuery.query({",
		"\tentityDomain: '${1:APM}',",
		"\tentityType: '${2:APPLICATION}',",
		"}).then(({ data }) => console.log(data));"
		],
		"description": "EntitiesByDomainTypeQuery"
	},
	"EntitiesByGuidsQuery": {
		"prefix": "NP:EntitiesByGuidsQuery",
		"body": [
		"EntitiesByGuidsQuery.query({",
		"\tentityGuids: [",
		"\t\t'${1:guid}',",
		"\t\t'${2:guid}',",
		"\t],",
		"}).then(({ data }) => ${3:function}(data));"
		],
		"description": "EntitiesByGuidsQuery"
	},
	"EntitiesByNameQuery": {
		"prefix": "NP:EntitiesByNameQuery",
		"body": [
		"EntitiesByNameQuery.query({",
		"\tname: '${1:entityName}',",
		"}).then(({ data }) => ${2:function}(data));"
		],
		"description": "EntitiesByNameQuery"
	},
	"EntityByGuidQuery": {
		"prefix": "NP:EntityByGuidQuery",
		"body": [
		"EntityByGuidQuery.query({",
		"\tentityGuid: '${1:guid}',",
		"}).then(({ data }) => console.log(data));"
		],
		"description": "EntityByGuidQuery"
	},
	"EntityCountQuery": {
		"prefix": "NP:EntityCountQuery",
		"body": [
		"EntityCountQuery.query().then(({ data }) => ${1:function}(data));"
		],
		"description": "EntityCountQuery"
	},
	"EntitySearchQuery": {
		"prefix": "NP:EntitySearchQuery",
		"body": [
		"EntitySearchQuery.query({",
		"\tfilters: [",
		"\t\t{",
		"\t\ttype: EntitySearchQuery.FILTER_TYPE.${1:TAG},",
		"\t\tvalue: { key: '${2:environment}', value: '${3:production}' },",
		"\t\t},",
		"\t],",
		"}).then(({ data }) => console.log(data));"
		],
		"description": "EntitySearchQuery"
	},
	"EntityStorageQuery": {
		"prefix": "NP:EntityStorageQuery",
		"body": [
		"EntityStorageQuery.query({",
		"\tentityGuid: '${1:guid}',",
		"\tcollection: '${2:myCollection}',",
		"\tdocumentId: '${3:myDocumentId}',",
		"}).then(({ data }) => console.log(data));"
		],
		"description": "EntityStorageQuery"
	},
	"EntityStorageMutationWrite": {
		"prefix": "NP:EntityStorageMutationWrite",
		"body": [
		"EntityStorageMutation.mutate({",
		"\tentityGuid: '${1:guid}',",
		"\tactionType: EntityStorageMutation.ACTION_TYPE.WRITE_DOCUMENT,",
		"\tcollection: '${2:myCollection}',",
		"\tdocumentId: '${3:myDocumentId}',",
		"\tdocument: {",
		"\t\t${4:key}: '${5:Value}',",
		"\t},",
		"});"
		],
		"description": "EntityStorageMutation"
	},
	"EntityStorageMutationDelete": {
		"prefix": "NP:EntityStorageMutationDelete",
		"body": [
		"EntityStorageMutation.mutate({",
		"\tentityGuid: '${1:guid}',",
		"\tactionType: EntityStorageMutation.ACTION_TYPE.DELETE_DOCUMENT,",
		"\tcollection: '${2:myCollection}',",
		"\tdocumentId: '${3:myDocumentId}',",
		"});"
		],
		"description": "EntityStorageMutationDelete"
	},
	"EntityStorageMutationDeleteCollection": {
		"prefix": "NP:EntityStorageMutationDeleteCollection",
		"body": [
		"EntityStorageMutation.mutate({",
		"\tentityGuid: '${1:guid}',",
		"\tactionType: EntityStorageMutation.ACTION_TYPE.DELETE_COLLECTION,",
		"\tcollection: '${2:myCollection}',",
		"});"
		],
		"description": "EntityStorageMutationDeleteCollection"
	},
	"NerdGraphMutation": {
		"prefix": "NP:NerdGraphMutation",
		"body": [
		"NerdGraphMutation.mutate({",
		"\tmutation: ngql`",
		"\t\t${1}",
		"\t`,",
		"\tvariables: {",
		"\t\t${2:key}: '${3:value}',",
		"\t},",
		"});"
		],
		"description": "NerdGraphMutation"
	},
	"NerdGraphQuery": {
		"prefix": "NP:NerdGraphQuery",
		"body": [
		"<NerdGraphQuery query={${1:query}} variables={${2:variables}}>",
		"\t{({ loading, error, data }) => {",
		"\t\tif (loading) {",
		"\t\t\treturn <Spinner />;",
		"\t\t}",
		"",
		"\t\tif (error) {",
		"\t\t\treturn 'Error!';",
		"\t\t}",
		"",
		"\t\treturn ${3:<Component />};",
		"\t}}",
		"</NerdGraphQuery>"
		],
		"description": "NerdGraphQuery"
	},
	"NrqlQuery": {
		"prefix": "NP:NrqlQuery",
		"body": [
		"<NrqlQuery",
		"\tpollInterval={${1:2000}}",
		"\taccountId={${2:1}}",
		"\tquery=\"${3:query}\"",
		">",
		"\t{({ data }) => {",
		"\t\treturn ${4:<Component />};",
		"\t}}",
		"</NrqlQuery>;"
		],
		"description": "NrqlQuery"
	},
	"UserQuery": {
		"prefix": "NP:UserQuery",
		"body": [
		"UserQuery.query().then(({ data }) => ${1:function}(data));"
		],
		"description": "UserQuery"
	},
	"UserStorageMutationWrite": {
		"prefix": "NP:UserStorageMutationWrite",
		"body": [
		"UserStorageMutation.mutate({",
		"\tactionType: UserStorageMutation.ACTION_TYPE.WRITE_DOCUMENT,",
		"\tcollection: '${1:myCollection}',",
		"\tdocumentId: '${2:myDocumentId}',",
		"\tdocument: {",
		"\t\t${3:key}: '${4:value}',",
		"\t},",
		"});"
		],
		"description": "UserStorageMutationWrite"
	},
	"UserStorageMutationDelete": {
		"prefix": "NP:UserStorageMutationDelete",
		"body": [
		"UserStorageMutation.mutate({",
		"\tactionType: UserStorageMutation.ACTION_TYPE.DELETE_DOCUMENT,",
		"\tcollection: '${1:myCollection}',",
		"\tdocumentId: '${2:myDocumentId}',",
		"});"
		],
		"description": "UserStorageMutationDelete"
	},
	"UserStorageMutationDeleteCollection": {
		"prefix": "NP:UserStorageMutationDeleteCollection",
		"body": [
		"UserStorageMutation.mutate({",
		"\tactionType: UserStorageMutation.ACTION_TYPE.DELETE_COLLECTION,",
		"\tcollection: '${1:myCollection}',",
		"});"
		],
		"description": "UserStorageMutationDeleteCollection"
	},
	"UserStorageQuery": {
		"prefix": "NP:UserStorageQuery",
		"body": [
		"UserStorageQuery.mutate({",
		"\tcollection: '${1:myCollection}',",
		"\tdocumentId: '${2:myDocumentId}',",
		"});"
		],
		"description": "UserStorageQuery"
	},
	"NerdletStateContext": {
		"prefix": "NP:NerdletStateContext",
		"body": [
		"<NerdletStateContext.Consumer>",
		"\t{(nerdletState) => ${1:<Component} platformState={platformState}/>}",
		"</NerdletStateContext.Consumer>;"
		],
		"description": "NerdletStateContext"
	},
	"PlatformStateContext": {
		"prefix": "NP:PlatformStateContext",
		"body": [
		"<PlatformStateContext.Consumer>",
		"\t{(platformState) => ${1:<Component} platformState={platformState}/>}",
		"</PlatformStateContext.Consumer>;"
		],
		"description": "PlatformStateContext"
	},
	"Logger": {
		"prefix": "NP:Logger",
		"body": [
		"logger.${1|log,warn,deprecate,debug,error|}($2)"
		],
		"description": "Logger"
	},
	"Navigator": {
		"prefix": "NP:Navigator",
		"scope": "javascript,typescript",
		"body": [
		"navigation.${1|getOpenEntityLocation,getOpenLauncherLocation,getOpenNerdletLocation,getOpenOverlayLocation,getOpenStackedEntityLocation,getOpenStackedNerdletLocation,getReplaceNerdletLocation,openEntity,openLauncher,openNerdlet,openOverlay,openStackedEntity,openStackedNerdlet,replaceNerdlet|}(${2:value})"
		],
		"description": "Navigator"
	},
	"Nerdlet": {
		"prefix": "NP:Nerdlet",
		"scope": "javascript,typescript",
		"body": [
		"nerdlet.${1|getSetUrlStateLocation,setConfig,setUrlState|}(${2:value})"
		],
		"description": "Nerdlet"
	},
	"NerdGraph Query": {
		"scope": "javascript,typescript",
		"prefix": "NP:gql",
		"body": [
			"const gql = `",
			"\t${1}",
			"`;",
			"const result = await NerdGraphQuery.query({ query: gql }).then((res) => {",
			"\tconsole.log('Result', res);",
			"\tif (res.data.errors) {",
			"\t\tthrow new Error(res.data.errors);",
			"\t}",
			"\tconst data = res.data;",
			"\t",
			"\treturn data;",
			"});",
		],
	},
}

